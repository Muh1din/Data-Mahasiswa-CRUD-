/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.crud;

import com.mycompany.crud.util.koneksi;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author din-actnow
 */
public class data extends javax.swing.JFrame {

    /**
     * Creates new form data
     */
    public data() {
        initComponents();
        tampilkanData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfNama = new javax.swing.JTextField();
        tfJurusan = new javax.swing.JTextField();
        tfNim = new javax.swing.JTextField();
        btnSimpan = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        btnCari = new javax.swing.JButton();
        tfCari = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jLabel1.setText("DATA MAHASISWA");

        jLabel2.setText("Nim");

        jLabel3.setText("Nama ");

        jLabel4.setText("Jurusan");

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnBatal.setText("Batal");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        btnCari.setText("Cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        tfCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfCariKeyTyped(evt);
            }
        });

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "id", "No", "Nama", "Nim", "Jurusan"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabel);
        if (tabel.getColumnModel().getColumnCount() > 0) {
            tabel.getColumnModel().getColumn(0).setMinWidth(0);
            tabel.getColumnModel().getColumn(0).setPreferredWidth(0);
            tabel.getColumnModel().getColumn(0).setMaxWidth(0);
            tabel.getColumnModel().getColumn(1).setMinWidth(30);
            tabel.getColumnModel().getColumn(1).setPreferredWidth(30);
            tabel.getColumnModel().getColumn(1).setMaxWidth(30);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(39, 39, 39)
                                .addComponent(tfJurusan, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tfNama, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tfNim, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSimpan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnHapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBatal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCari, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfCari, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(153, 153, 153))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfNim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfJurusan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfCari, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSimpan)
                        .addComponent(btnHapus)
                        .addComponent(btnUpdate)
                        .addComponent(btnBatal)
                        .addComponent(btnCari)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // kumpulan method {
    
    // method cek data 
    public boolean cekData(Connection conn, String nim)throws SQLException{
        DefaultTableModel model = (DefaultTableModel) tabel.getModel();
        model.setNumRows(0);
        
            String query = "SELECT COUNT(*) FROM data WHERE nim = ?";
            try(PreparedStatement stmt = conn.prepareStatement(query)){
                stmt.setString(1, nim);
                ResultSet resultSet = stmt.executeQuery();
                if(resultSet.next()){
                    return resultSet.getInt(1) > 0;
                }
            }
        return false;
   }

    
    // method simpan data
    public void simpanData(){
        String nama = tfNama.getText().trim();
        String nim = tfNim.getText().trim();
        String jurusan = tfJurusan.getText().trim();
        
        if(nama.isBlank() || nim.isBlank() || jurusan.isBlank()){
            JOptionPane.showMessageDialog(this, "Isi data terlebih dahulu");
        } else {
            try(Connection conn = koneksi.getConnection()){
                if(cekData(conn, nim)){
                    JOptionPane.showMessageDialog(this, "Data dengan nim ini sudah tersedia, gunakan nim lain");
                    tampilkanData();
                } else {
                    String query = "INSERT INTO data(nama, nim, jurusan) VALUES (?,?,?)";
                    try(PreparedStatement stmt = conn.prepareStatement(query)){
                    stmt.setString(1, nama);
                    stmt.setString(2, nim);
                    stmt.setString(3,jurusan);
               
                int result = stmt.executeUpdate();
                if(result > 0){
                    JOptionPane.showMessageDialog(this,"Data berhasil ditambahkan");
                    tfNama.setText("");
                    tfNim.setText("");
                    tfJurusan.setText("");
                    tampilkanData();
                }else {
                    JOptionPane.showMessageDialog(this, "Data gagal ditambahkan");
                }
                 }
                }
            
        }catch (SQLException e ){
            JOptionPane.showMessageDialog(this, "uppss !! terjadi kesalahan " + e.getMessage(),
                    "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        }

    }
    
    // tampilkan data
    public void tampilkanData(){
        DefaultTableModel model = (DefaultTableModel) tabel.getModel();
        model.setNumRows(0);
        
        try(Connection conn = koneksi.getConnection()){
            String query = "SELECT * FROM data ";
            try(PreparedStatement stmt = conn.prepareStatement(query)){
                ResultSet resultSet = stmt.executeQuery();
                
                int nomor = 1;
                while(resultSet.next()){
                    int id = resultSet.getInt("id");
                    String nama = resultSet.getString("nama");
                    String nim = resultSet.getString("nim");
                    String jurusan = resultSet.getString("jurusan");
                    
                    model.addRow(new Object[] {id, nomor, nama, nim, jurusan});
                    nomor++;
                }
            }
        }catch (SQLException e){
            JOptionPane.showMessageDialog(this, "uppss Terjadi kesalahan!!" + e.getMessage(), 
                    "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    // cari data
    public void cariData(){
        DefaultTableModel model = (DefaultTableModel) tabel.getModel();
        model.setNumRows(0);
        String keyword = tfCari.getText().trim();
        
        try(Connection conn = koneksi.getConnection()){
            String query = "SELECT id, nama, jurusan, nim FROM data WHERE nama LIKE ? OR jurusan LIKE ? OR nim LIKE ? ";
            try(PreparedStatement stmt = conn.prepareStatement(query)){
                stmt.setString(1, "%" + keyword + "%");
                stmt.setString(2, "%" + keyword + "%");
                stmt.setString(3, "%" + keyword + "%");
                
                ResultSet resultSet = stmt.executeQuery();
                
                int nomor = 1;
               
                while(resultSet.next()){
                  boolean cekdata = true;
                    int id = resultSet.getInt("id");
                    String nama = resultSet.getString("nama");
                    String nim = resultSet.getString("nim");
                    String jurusan = resultSet.getString("jurusan");
                    
                    model.addRow(new Object[] {id, nomor, nama, nim, jurusan});
                    nomor++;
                    if(!cekdata){
                        model.setNumRows(0);
                    }
                }
                
            }
        }catch (SQLException e){
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan " + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        } 
    }
//     }  
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
                                   
    // Mendapatkan daftar monitor
    GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
    GraphicsDevice[] screens = ge.getScreenDevices();

    if (screens.length > 1) { // Cek apakah ada lebih dari satu monitor
        GraphicsDevice secondMonitor = screens[1]; // Ambil monitor kedua
        Rectangle bounds = secondMonitor.getDefaultConfiguration().getBounds();

        // Hitung posisi tengah pada monitor kedua
        int x = bounds.x + (bounds.width - this.getWidth()) / 2;
        int y = bounds.y + (bounds.height - this.getHeight()) / 2;

        // Atur lokasi JFrame
        this.setLocation(x, y);
    } else {
        System.out.println("Monitor kedua tidak ditemukan!");
        this.setLocationRelativeTo(null); // Tampilkan di tengah monitor utama jika hanya satu monitor
    }

    }//GEN-LAST:event_formWindowOpened

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        simpanData();
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
       //  mengambil input ketika diselect 
        int tabelSelect = tabel.getSelectedRow();
        
        if(tabelSelect != -1){
            String nim = tabel.getValueAt(tabelSelect, 3).toString();
            int konfimasi = JOptionPane.showConfirmDialog(this, "apakah ingin menghapus? ", 
                       "konfirmasi", JOptionPane.YES_NO_OPTION);
            
            if(konfimasi == JOptionPane.YES_OPTION){
               
               try(Connection conn = koneksi.getConnection()){
                   String query = "DELETE FROM data WHERE nim = ?";
                   try(PreparedStatement stmt = conn.prepareStatement(query)){
                       stmt.setString(1, nim);
                       int resultQuery = stmt.executeUpdate();
                       if(resultQuery > 0){
                           JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
                           tampilkanData();
                       }else {
                           JOptionPane.showMessageDialog(this, "Data gagal dihapus");
                       }
                   }
               }catch(SQLException e){
                   JOptionPane.showMessageDialog(this, "Terjadi kesalahan ", "ERROR", JOptionPane.ERROR_MESSAGE);
               }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Pilih data yang akan dihapus");
        }
            
        
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
       int selectTabel = tabel.getSelectedRow();
      
       
       if(selectTabel != -1){
           
           String id =  tabel.getValueAt(selectTabel, 0).toString();
           String namaBaru = tabel.getValueAt(selectTabel, 2).toString();
           String Nim = tabel.getValueAt(selectTabel, 3).toString();
           String jurusanBaru = tabel.getValueAt(selectTabel,4).toString();
           
           try(Connection conn = koneksi.getConnection()){
               String queryCek = "SELECT nama, jurusan, nim FROM data WHERE id = ?";
               try(PreparedStatement stmt = conn.prepareStatement(queryCek)){
                   stmt.setString(1, id);
                   ResultSet resultSet = stmt.executeQuery();
                   
                   if(resultSet.next()){
                       String nama = resultSet.getString("nama");
                       String nim = resultSet.getString("nim");
                       String jurusan = resultSet.getString("jurusan");
                       
                       if(nama.equals(namaBaru) && jurusan.equals(jurusanBaru) && nim.equals(Nim)){
                           JOptionPane.showMessageDialog(this,"tidak ada data yang berubah, gagal mengupdate");
                       }
                   }else {
                       JOptionPane.showMessageDialog(this,"gak masuk");
                   }
               }
               
               String query = "UPDATE data SET nama = ?, jurusan = ?, nim = ? WHERE id = ?";
               try(PreparedStatement stmt = conn.prepareStatement(query)){
                   stmt.setString(1, namaBaru);
                   stmt.setString(2, jurusanBaru);
                   stmt.setString(3, Nim);
                   stmt.setString(4, id);
                   
                   int queryResult = stmt.executeUpdate();
                   if(queryResult > 0){
                       JOptionPane.showMessageDialog(this,"Data berhasil diupdate");
                       tampilkanData();
                   }else {
                       JOptionPane.showMessageDialog(this,"Data gagal diupdate");
                       tampilkanData();
                   }
               }
           }catch (SQLException e){
               JOptionPane.showMessageDialog(this,"Terjadi kesalahan " + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
           }
           
           
       }else {
           JOptionPane.showMessageDialog(this,"Edit data yang ingin diupdate terlebih dahulu");
       }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
       tabel.clearSelection();
        
       tfCari.setText("");
       tfJurusan.setText("");
       tfNama.setText("");
       tfNim.setText("");
    }//GEN-LAST:event_btnBatalActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        cariData();
    }//GEN-LAST:event_btnCariActionPerformed

    private void tfCariKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCariKeyTyped
        cariData();
    }//GEN-LAST:event_tfCariKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       java.awt.EventQueue.invokeLater(() -> new data().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabel;
    private javax.swing.JTextField tfCari;
    private javax.swing.JTextField tfJurusan;
    private javax.swing.JTextField tfNama;
    private javax.swing.JTextField tfNim;
    // End of variables declaration//GEN-END:variables
}
